{"version":3,"sources":["context.js","components/AlbumCard.js","components/ChangePassword.js","components/ConfirmPassword.js","components/AlbumDialog.js","components/DeleteDialog.js","components/DrawerMenu.js","components/Home.js","components/Login.js","components/Albums.js","components/Gallery.js","components/Navbar.js","components/Signup.js","components/PublicKey.js","components/ShareInviteDialog.js","components/Invites.js","components/PublicKeyDialog.js","routes.js","app.js","index.js"],"names":["UserContext","React","createContext","UserSessionContext","InviteContext","Context","children","localSession","JSON","parse","sessionStorage","getItem","useState","userSession","setUserSession","user","setUser","invites","setInvites","useEffect","setItem","stringify","Provider","value","useStyles","makeStyles","root","maxWidth","AlbumCard","props","classes","openAlbumDialog","setOpenAlbumDialog","openDeleteDialog","setOpenDeleteDialog","openShareDialog","setOpenShareDialog","album","name","description","uid","getAlbums","useContext","albumMeta","collectionManager","getCollectionManager","getAlbum","a","albumCollection","fetch","console","log","accessLevel","invitationManager","getInvitationManager","fetchUserProfile","invitee","invite","pubkey","Etebase","userAccess","meta","getMeta","setMeta","upload","delete","Grid","item","xs","sm","md","Card","className","CardActionArea","component","RouterLink","to","pathname","state","CardHeader","title","CardContent","Typography","variant","color","CardActions","IconButton","size","onClick","ShareInviteDialog","open","onClose","nameValue","style","flex","AlbumDialog","selectedValue","message","DeleteDialog","Copyright","align","Link","href","Date","getFullYear","theme","paper","marginTop","spacing","display","flexDirection","alignItems","avatar","margin","backgroundColor","palette","secondary","main","form","width","submit","ChangePassword","serverUrl","process","setShowProgress","setShowError","currentPassword","newPassword","confirmNewPassword","formInfo","setFormInfo","evt","preventDefault","login","username","etebase","changePassword","alert","handleChange","target","Container","CssBaseline","Avatar","noValidate","onSubmit","TextField","required","fullWidth","id","label","type","onChange","autoComplete","autoFocus","Button","Box","mt","Alert","elevation","backdrop","zIndex","drawer","ConfirmPassword","showProgress","showError","password","history","useHistory","formInfoToSubmit","RSAkey","cryptico","generateRSAKey","encryptionKey","publicKeyString","restore","currentUser","push","handleClose","reason","Backdrop","CircularProgress","Snackbar","autoHideDuration","severity","button","albumInfo","setAlbumInfo","handleButtonClick","Dialog","DialogTitle","DialogContent","DialogContentText","DialogActions","list","fullList","DrawerMenu","menuOpen","setMenuOpen","toggleDrawer","event","key","Fragment","Drawer","anchor","role","onKeyDown","List","ListItem","ListItemIcon","ListItemText","primary","flexGrow","centerColumn","height","Home","container","direction","justifyContent","Login","save","savedSession","gridContainer","paddingLeft","paddingRight","Albums","albumCollections","albums","setAlbums","setOpen","handleClickOpen","create","collection","undefined","data","length","filter","isDeleted","gutterBottom","map","Gallery","location","useLocation","images","setImages","imageUids","setImageUids","uidArray","galleryRef","useRef","photoManager","getItemManager","getPhotos","cleanUp","fullString","findAndInsertAfter","findAndInsertBefore","searchString","insertPosition","indexOf","slice","firstPass","secondPass","thirdPass","initialPhotoArray","photos","photoList","photo","getContent","photoContent","Base64","fromUint8Array","base64Photo","updateState","encodeImagesToBase64","base64Array","uploadImages","getBase64","file","reader","FileReader","Promise","resolve","onload","ev","result","readAsDataURL","promises","fileList","Array","from","files","i","all","secondStep","reduce","previousPromise","dataString","imagesArray","ImageInt8Array","toUint8Array","mtime","getTime","itemArray","batch","galleryArray","image","original","thumbnail","galleryElement","current","indexOfPhoto","getCurrentIndex","photoUid","previous","index","items","showFullscreenButton","showPlayButton","ref","htmlFor","multiple","grow","menuButton","marginRight","sectionDesktop","breakpoints","up","sectionMobile","Navbar","anchorEl","setAnchorEl","mobileMoreAnchorEl","setMobileMoreAnchorEl","isMenuOpen","Boolean","isMobileMenuOpen","handleProfileMenuOpen","currentTarget","handleMobileMenuClose","handleMenuClose","menuId","renderMenu","anchorOrigin","vertical","horizontal","keepMounted","transformOrigin","getContentAnchorEl","MenuItem","mobileMenuId","renderMobileMenu","Badge","badgeContent","logout","listIncoming","invitations","getInvites","AppBar","position","top","left","Toolbar","noWrap","edge","Signup","email","confirmPassword","setData","formData","signup","persist","PublicKey","myPublicKey","prettyFingerprint","lineOne","substr","lineTwo","lineThree","useTheme","fullScreen","useMediaQuery","down","inviteeSelections","setInviteeSelections","handleCancel","FormControl","RadioGroup","row","FormControlLabel","control","Radio","labelPlacement","endIcon","listItem","InteractiveList","openPublicKeyDialog","setOpenPublicKeyDialog","handlePublicKeyDialogClickOpen","accept","reject","getPublicKey","publicKey","fromPubkey","divider","fromUsername","ListItemSecondaryAction","handleDeny","handleAccept","withStyles","padding","closeButton","right","grey","other","disableTypography","MuiDialogContent","PublickKeyDialog","dividers","Routes","exact","path","Invites","Component","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e22c3c8b.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\n\nexport const UserContext = React.createContext();\nexport const UserSessionContext = React.createContext();\nexport const InviteContext = React.createContext();\n\nconst Context = ({ children }) => {\n  const initialUser = '';\n  const initialUserSession = '';\n  const initialInvites = {};\n\n  // Pulls the session ID from sessionStorage (if it exists)\n  const localSession = JSON.parse(sessionStorage.getItem('sessionInfo'));\n\n  // If a session ID exists (the user is already logged in), we set the\n  // userSession to that value. If it doesn't (it's falsy), we set userSession\n  // to an empty string\n  const [userSession, setUserSession] = useState(\n    localSession || initialUserSession\n  );\n\n  const [user, setUser] = useState(initialUser);\n  const [invites, setInvites] = useState(initialInvites);\n\n  useEffect(() => {\n    // Creates a key in sessionStorage with the session ID\n    // This is run any time the userSession state value changes\n    sessionStorage.setItem('sessionInfo', JSON.stringify(userSession));\n\n    // If a session ID exists and the user state value is falsy, we pull the\n    // user from the server and set the state value to that user\n    // const loggedInUser = async (userSession) => {\n    //   if (userSession && !user) {\n    //     // const currentUser = await Etebase.Account.restore(userSession);\n    //     setUser(userSession);\n    //   }\n    // };\n    // loggedInUser(userSession);\n  }, [userSession]);\n\n  return (\n    <UserSessionContext.Provider value={[userSession, setUserSession]}>\n      <UserContext.Provider value={[user, setUser]}>\n        <InviteContext.Provider value={[invites, setInvites]}>\n          {children}\n        </InviteContext.Provider>\n      </UserContext.Provider>\n    </UserSessionContext.Provider>\n  );\n};\n\nexport default Context;\n","import React, { useContext, useState } from 'react';\nimport { AlbumDialog, DeleteDialog, ShareInviteDialog } from '.';\nimport { Link as RouterLink } from 'react-router-dom';\nimport { UserContext } from '../context';\nimport * as Etebase from 'etebase';\nimport { makeStyles } from '@material-ui/core/styles';\nimport {\n  Card,\n  CardActionArea,\n  CardActions,\n  CardContent,\n  CardHeader,\n  Grid,\n  IconButton,\n  Typography,\n} from '@material-ui/core/';\nimport DeleteOutlined from '@material-ui/icons/DeleteOutlined';\nimport EditOutlined from '@material-ui/icons/EditOutlined';\nimport ShareIcon from '@material-ui/icons/Share';\n\nconst useStyles = makeStyles({\n  root: {\n    maxWidth: 345,\n  },\n});\n\nexport default function AlbumCard(props) {\n  const classes = useStyles();\n  const [openAlbumDialog, setOpenAlbumDialog] = useState(false);\n  const [openDeleteDialog, setOpenDeleteDialog] = useState(false);\n  const [openShareDialog, setOpenShareDialog] = useState(false);\n  const { album, name, description, uid, getAlbums } = props;\n  const [user, setUser] = useContext(UserContext);\n  let albumMeta = {\n    name,\n    description,\n    uid,\n  };\n  let nameValue = '';\n  let selectedValue = '';\n  let selectedDeleteValue = '';\n\n  const collectionManager = user.getCollectionManager();\n\n  async function getAlbum(uid) {\n    let albumCollection = {};\n    try {\n      albumCollection = await collectionManager.fetch(uid);\n    } catch (err) {\n      console.log(err);\n    } finally {\n      return albumCollection;\n    }\n  }\n\n  const handleAlbumDialogClickOpen = () => {\n    setOpenAlbumDialog(true);\n  };\n\n  const handleDeleteDialogClickOpen = () => {\n    setOpenDeleteDialog(true);\n  };\n\n  const handleShareDialogClickOpen = () => {\n    setOpenShareDialog(true);\n  };\n\n  async function handleShareDialogClose(value, accessLevel) {\n    setOpenShareDialog(false);\n    if (value === 'Send') {\n      try {\n        const invitationManager = user.getInvitationManager();\n        const invitee = await invitationManager.fetchUserProfile(\n          accessLevel.user\n        );\n        await invitationManager.invite(\n          album,\n          accessLevel.user,\n          invitee.pubkey,\n          Etebase.CollectionAccessLevel[accessLevel.userAccess]\n        );\n      } catch (err) {\n        console.log(err);\n      } finally {\n        console.log('AlbumCard: Your invitation was successfully sent');\n      }\n    }\n  }\n\n  // This takes in either \"Cancel\" or \"Save\" as a value\n  async function handleClose(value, album) {\n    // This closes the dialog window\n    setOpenAlbumDialog(false);\n    if (value === 'Save') {\n      try {\n        const albumCollection = await getAlbum(album.uid);\n        const meta = albumCollection.getMeta();\n        albumCollection.setMeta({\n          ...meta,\n          name: album.name,\n          description: album.description,\n        });\n        await collectionManager.upload(albumCollection);\n      } catch (err) {\n        console.log(err);\n      } finally {\n        getAlbums();\n      }\n    }\n  }\n\n  async function handleDeleteDialogClose(value, album) {\n    // This closes the delete dialog\n    setOpenDeleteDialog(false);\n    // If the value is Agree, we delete the album and re-render Albums component\n    if (value === 'Agree') {\n      try {\n        const albumCollection = await getAlbum(album.uid);\n        albumCollection.delete();\n        await collectionManager.upload(albumCollection);\n      } catch (err) {\n        console.log(err);\n      } finally {\n        getAlbums();\n      }\n    }\n  }\n\n  return (\n    <Grid item xs={12} sm={6} md={4}>\n      <Card className={classes.root}>\n        <CardActionArea\n          component={RouterLink}\n          to={{\n            pathname: '/gallery',\n            state: { albumMeta: albumMeta, albumCollection: album },\n          }}\n        >\n          <CardHeader title={name} />\n          <CardContent>\n            <Typography variant='body2' color='textSecondary' component='p'>\n              {description}\n            </Typography>\n          </CardContent>\n        </CardActionArea>\n        {album.accessLevel !== 0 ? (\n          <CardActions>\n            <IconButton\n              size='small'\n              color='primary'\n              onClick={handleShareDialogClickOpen}\n            >\n              <ShareIcon />\n            </IconButton>\n            <ShareInviteDialog\n              open={openShareDialog}\n              onClose={handleShareDialogClose}\n              nameValue={nameValue}\n            />\n            <div style={{ flex: '1 0 0' }} />\n\n            <IconButton\n              size='small'\n              color='primary'\n              onClick={handleAlbumDialogClickOpen}\n            >\n              <EditOutlined />\n            </IconButton>\n\n            <AlbumDialog\n              open={openAlbumDialog}\n              onClose={handleClose}\n              selectedValue={selectedValue}\n              album={albumMeta}\n              message={'Edit'}\n            />\n\n            <IconButton\n              size='small'\n              color='secondary'\n              onClick={handleDeleteDialogClickOpen}\n            >\n              <DeleteOutlined />\n            </IconButton>\n\n            <DeleteDialog\n              open={openDeleteDialog}\n              onClose={handleDeleteDialogClose}\n              selectedValue={selectedDeleteValue}\n              album={albumMeta}\n              message={'album'}\n            />\n          </CardActions>\n        ) : null}\n      </Card>\n    </Grid>\n  );\n}\n","import React, { useState, useContext } from 'react';\nimport * as Etebase from 'etebase';\nimport {\n  Avatar,\n  Box,\n  Button,\n  Container,\n  CssBaseline,\n  Link,\n  TextField,\n  Typography,\n} from '@material-ui/core/';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { UserContext } from '../context';\n\nfunction Copyright() {\n  return (\n    <Typography variant='body2' color='textSecondary' align='center'>\n      {'Copyright © '}\n      <Link color='inherit' href='https://material-ui.com/'>\n        Encryptographs\n      </Link>{' '}\n      {new Date().getFullYear()}\n      {'.'}\n    </Typography>\n  );\n}\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    marginTop: theme.spacing(8),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  form: {\n    width: '100%', // Fix IE 11 issue.\n    marginTop: theme.spacing(1),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n}));\n\nexport default function ChangePassword() {\n  const serverUrl = process.env.REACT_APP_SERVER_URL;\n  const classes = useStyles();\n  const [user, setUser] = useContext(UserContext);\n  const [showProgress, setShowProgress] = useState(false);\n  const [showError, setShowError] = useState(false);\n  const [formInfo, setFormInfo] = useState({\n    currentPassword: '',\n    newPassword: '',\n    confirmNewPassword: '',\n  });\n\n  async function Submit(evt) {\n    try {\n      evt.preventDefault();\n      setShowProgress(true);\n\n      if (formInfo.newPassword === formInfo.confirmNewPassword) {\n        const etebase = await Etebase.Account.login(\n          user.user.username,\n          formInfo.currentPassword,\n          serverUrl\n        );\n        await etebase.changePassword(formInfo.confirmNewPassword);\n      }\n    } catch (err) {\n      console.log(err);\n      // Show error message if passwords do not match\n      setShowError(true);\n    } finally {\n      alert('Password Changed!');\n      setShowProgress(false);\n    }\n  }\n\n  const handleChange = (evt) => {\n    setFormInfo({ ...formInfo, [evt.target.name]: evt.target.value });\n  };\n\n  const handleClose = (evt, reason) => {\n    if (reason === 'clickaway') {\n      return;\n    }\n    setShowError(false);\n  };\n\n  return (\n    <Container component='main' maxWidth='xs'>\n      <CssBaseline />\n      <div className={classes.paper}>\n        <Avatar className={classes.avatar}>\n          <LockOutlinedIcon />\n        </Avatar>\n        <Typography component='h1' variant='h5'>\n          Change Password\n        </Typography>\n        {/* We need to add the onSubmit event listener here */}\n        <form className={classes.form} noValidate onSubmit={Submit}>\n          <TextField\n            variant='outlined'\n            margin='normal'\n            required\n            fullWidth\n            id='currentPassword'\n            label='Current Password'\n            type='password'\n            name='currentPassword'\n            onChange={handleChange}\n            value={formInfo.currentPassword}\n            autoComplete='currentPassword'\n            autoFocus\n          />\n          <TextField\n            variant='outlined'\n            margin='normal'\n            required\n            fullWidth\n            name='newPassword'\n            onChange={handleChange}\n            label='New Password'\n            type='password'\n            value={formInfo.newPassword}\n            id='newPassword'\n            autoComplete='newPassword'\n          />\n          <TextField\n            variant='outlined'\n            margin='normal'\n            required\n            fullWidth\n            name='confirmNewPassword'\n            onChange={handleChange}\n            label='Confirm Password'\n            type='password'\n            value={formInfo.confirmNewPassword}\n            id='confirmNewPassword'\n            autoComplete='confirmNewPassword'\n          />\n          <Button\n            type='submit'\n            fullWidth\n            variant='contained'\n            color='primary'\n            className={classes.submit}\n          >\n            Change Password\n          </Button>\n        </form>\n      </div>\n      <Box mt={8}>\n        <Copyright />\n      </Box>\n    </Container>\n  );\n}\n","import React, { useState, useContext } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport * as Etebase from 'etebase';\nimport cryptico from 'cryptico';\nimport { UserContext, UserSessionContext } from '../context';\nimport {\n  Avatar,\n  Backdrop,\n  Box,\n  Button,\n  CircularProgress,\n  Container,\n  CssBaseline,\n  Link,\n  Snackbar,\n  TextField,\n  Typography,\n} from '@material-ui/core';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport { makeStyles } from '@material-ui/core/styles';\nimport MuiAlert from '@material-ui/lab/Alert';\n\nfunction Alert(props) {\n  return <MuiAlert elevation={6} variant='filled' {...props} />;\n}\n\nfunction Copyright() {\n  return (\n    <Typography variant='body2' color='textSecondary' align='center'>\n      {'Copyright © '}\n      <Link color='inherit' href='https://www.encryptographs.com'>\n        Encryptographs\n      </Link>{' '}\n      {new Date().getFullYear()}\n      {'.'}\n    </Typography>\n  );\n}\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    marginTop: theme.spacing(8),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  backdrop: {\n    zIndex: theme.zIndex.drawer + 1,\n    color: '#fff',\n  },\n  form: {\n    width: '100%', // Fix IE 11 issue.\n    marginTop: theme.spacing(1),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n}));\n\nexport default function ConfirmPassword() {\n  const classes = useStyles();\n  const [user, setUser] = useContext(UserContext);\n  const [userSession, setUserSession] = useContext(UserSessionContext);\n  const [showProgress, setShowProgress] = useState(false);\n  const [showError, setShowError] = useState(false);\n  const [formInfo, setFormInfo] = useState({\n    username: '',\n    password: '',\n  });\n  const history = useHistory();\n\n  async function Submit(evt) {\n    let currentUser;\n    try {\n      // Prevent the default action of refreshing the page\n      evt.preventDefault();\n      // Show the loading dialog\n      setShowProgress(true);\n\n      const formInfoToSubmit = {\n        password: formInfo.password,\n      };\n\n      // Decrypt the session and set the User state with it\n      const RSAkey = cryptico.generateRSAKey(formInfoToSubmit.password, 186);\n      const encryptionKey = cryptico.publicKeyString(RSAkey);\n      currentUser = await Etebase.Account.restore(userSession, encryptionKey);\n    } catch (error) {\n      setShowError(true);\n    } finally {\n      // Hide the progress dialog\n      setShowProgress(false);\n      // If password is correct, set the user. If not, logout the user\n      if (currentUser) {\n        setUser(currentUser);\n      } else {\n        history.push('/');\n      }\n    }\n  }\n\n  const handleChange = (evt) => {\n    setFormInfo({ ...formInfo, [evt.target.name]: evt.target.value });\n  };\n\n  const handleClose = (evt, reason) => {\n    if (reason === 'clickaway') {\n      return;\n    }\n    setShowError(false);\n  };\n\n  return (\n    <Container component='main' maxWidth='xs'>\n      <CssBaseline />\n      <div className={classes.paper}>\n        <Avatar className={classes.avatar}>\n          <LockOutlinedIcon />\n        </Avatar>\n        <Typography component='h1' variant='h5'>\n          Confirm your password\n        </Typography>\n        <form className={classes.form} onSubmit={Submit}>\n          <TextField\n            variant='outlined'\n            margin='normal'\n            required\n            fullWidth\n            name='password'\n            onChange={handleChange}\n            value={formInfo.password}\n            label='Password'\n            type='password'\n            id='password'\n            autoComplete='current-password'\n          />\n          <Button\n            type='submit'\n            fullWidth\n            variant='contained'\n            color='primary'\n            className={classes.submit}\n          >\n            Confirm Password\n          </Button>\n        </form>\n      </div>\n      <Box mt={8}>\n        <Copyright />\n      </Box>\n      <Backdrop className={classes.backdrop} open={showProgress}>\n        <CircularProgress color='primary' />\n      </Backdrop>\n      <Snackbar open={showError} autoHideDuration={6000} onClose={handleClose}>\n        <Alert onClose={handleClose} severity='error'>\n          Your username or password is incorrect.\n        </Alert>\n      </Snackbar>\n    </Container>\n  );\n}\n","import React, { useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport {\n  Button,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogContentText,\n  DialogTitle,\n  TextField,\n} from '@material-ui/core/';\n\n// This is required for the styling of the button\nconst useStyles = makeStyles((theme) => ({\n  button: {\n    margin: theme.spacing(1),\n  },\n}));\n\nexport default function AlbumDialog(props) {\n  const { onClose, selectedValue, open, album, message } = props;\n  const [albumInfo, setAlbumInfo] = useState({\n    name: album.name || '',\n    description: album.description || '',\n    uid: album.uid || '',\n  });\n\n  const handleChange = (evt) => {\n    setAlbumInfo({ ...albumInfo, [evt.target.name]: evt.target.value });\n  };\n\n  // This handles the case of the dialog window being closed without a button\n  // being pressed\n  const handleClose = () => {\n    onClose(selectedValue);\n  };\n\n  const handleButtonClick = (value) => {\n    // We use the onClose function we got from the parent component through\n    // props and pass the button pressed\n    // This results in the value being passed back to the parent\n    // component where we set selectedValue to that value\n    // If this dialog is used to create an album, we need to clear the below\n    // fields otherwise they will remain populated\n    if (value === 'Create') {\n      setAlbumInfo({\n        name: '',\n        description: '',\n        uid: '',\n      });\n    }\n    onClose(value, albumInfo);\n  };\n\n  return (\n    <div>\n      <Dialog\n        open={open}\n        // When you click away from the dialog this fires. If this was not here\n        // you would need to select an option to close the window\n        onClose={handleClose}\n        aria-labelledby='form-dialog-title'\n      >\n        {message === 'Create' ? (\n          <DialogTitle id='form-dialog-title'>Create Album</DialogTitle>\n        ) : (\n          <DialogTitle id='form-dialog-title'>Edit Album</DialogTitle>\n        )}\n\n        <DialogContent>\n          <DialogContentText>\n            Please enter a name and description (optional) for your album.\n          </DialogContentText>\n          <TextField\n            autoFocus\n            required\n            margin='dense'\n            id='name'\n            label='Name'\n            name='name'\n            value={albumInfo.name}\n            onChange={handleChange}\n            fullWidth\n          />\n          <TextField\n            margin='dense'\n            id='description'\n            label='Description (Optional)'\n            name='description'\n            onChange={handleChange}\n            value={albumInfo.description}\n            fullWidth\n          />\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={() => handleButtonClick('Cancel')} color='primary'>\n            Cancel\n          </Button>\n          {/* This is a conditional to change the button name depending on\n              what the parent component is */}\n          {message === 'Create' ? (\n            <Button onClick={() => handleButtonClick('Create')} color='primary'>\n              Create\n            </Button>\n          ) : (\n            <Button onClick={() => handleButtonClick('Save')} color='primary'>\n              Save\n            </Button>\n          )}\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}\n","import React, { useState } from 'react';\nimport {\n  Button,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogContentText,\n  DialogTitle,\n} from '@material-ui/core/';\n\nexport default function DeleteDialog(props) {\n  const { open, onClose, selectedValue, album, message } = props;\n\n  const handleButtonClick = (value) => {\n    onClose(value, album);\n  };\n\n  // This handles the case of the dialog window being closed without a button\n  // being pressed\n  const handleClose = () => {\n    onClose(selectedValue);\n  };\n\n  return (\n    <div>\n      <Dialog\n        open={open}\n        onClose={handleClose}\n        aria-labelledby='alert-dialog-title'\n        aria-describedby='alert-dialog-description'\n      >\n        <DialogTitle id='alert-dialog-title'>\n          {`Delete this ${message}?`}\n        </DialogTitle>\n        <DialogContent>\n          <DialogContentText id='alert-dialog-description'>\n            {`Please confirm that you wish to delete this ${message}.`}\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={() => handleButtonClick('Disagree')} color='primary'>\n            Disagree\n          </Button>\n          <Button\n            onClick={() => handleButtonClick('Agree')}\n            color='primary'\n            autoFocus\n          >\n            Agree\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}\n","import React, { useState, useContext } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport { makeStyles } from '@material-ui/core/styles';\nimport {\n  Button,\n  Drawer,\n  List,\n  ListItem,\n  ListItemIcon,\n  ListItemText,\n} from '@material-ui/core';\nimport HomeIcon from '@material-ui/icons/Home';\nimport PhotoAlbumIcon from '@material-ui/icons/PhotoAlbum';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport { UserSessionContext } from '../context';\n\nconst useStyles = makeStyles({\n  list: {\n    width: 250,\n  },\n  fullList: {\n    width: 'auto',\n  },\n});\n\nexport default function DrawerMenu() {\n  const classes = useStyles();\n  const [userSession, setUserSession] = useContext(UserSessionContext);\n  const [menuOpen, setMenuOpen] = useState(false);\n\n  const toggleDrawer = (open) => (event) => {\n    if (\n      event.type === 'keydown' &&\n      (event.key === 'Tab' || event.key === 'Shift')\n    ) {\n      return;\n    }\n\n    setMenuOpen(open);\n  };\n\n  return (\n    <div>\n      <React.Fragment key={'left'}>\n        <Button onClick={toggleDrawer(true)}>\n          <MenuIcon style={{ color: `white` }} />\n        </Button>\n        <Drawer anchor={'left'} open={menuOpen} onClose={toggleDrawer(false)}>\n          <div\n            className={classes.fullList}\n            role='presentation'\n            onClick={toggleDrawer(false)}\n            onKeyDown={toggleDrawer(false)}\n          >\n            <List>\n              <ListItem button component={RouterLink} to={'/home'} key={'Home'}>\n                <ListItemIcon>\n                  <HomeIcon />\n                </ListItemIcon>\n                <ListItemText primary={'Home'} />\n              </ListItem>\n              {!userSession ? null : (\n                <ListItem\n                  button\n                  component={RouterLink}\n                  to={'/albums'}\n                  key={'View Albums'}\n                >\n                  <ListItemIcon>\n                    <PhotoAlbumIcon />\n                  </ListItemIcon>\n                  <ListItemText primary={'View Albums'} />\n                </ListItem>\n              )}\n            </List>\n          </div>\n        </Drawer>\n      </React.Fragment>\n    </div>\n  );\n}\n","import React, { useContext } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { UserContext, UserSessionContext } from '../context';\nimport { Grid, Typography } from '@material-ui/core';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  centerColumn: {\n    height: 750,\n  },\n}));\n\nconst Home = () => {\n  const [user, setUser] = useContext(UserContext);\n  const [userSession, setUserSession] = useContext(UserSessionContext);\n  const classes = useStyles();\n\n  return (\n    <Grid container direction='column' align='center'>\n      <Grid\n        item\n        container\n        className={classes.centerColumn}\n        direction='column'\n        display='flex'\n        justifyContent='center'\n      >\n        <Typography variant='h2'>\n          {/* {Object.keys(user).length */}\n          {userSession && user ? `Welcome ${user.user.username}!` : `Welcome`}\n        </Typography>\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default Home;\n","import React, { useState, useContext } from 'react';\nimport { useHistory, Link as RouterLink } from 'react-router-dom';\nimport * as Etebase from 'etebase';\nimport cryptico from 'cryptico';\nimport { UserContext, UserSessionContext } from '../context';\nimport {\n  Avatar,\n  Backdrop,\n  Box,\n  Button,\n  CircularProgress,\n  Container,\n  CssBaseline,\n  Grid,\n  Link,\n  Snackbar,\n  TextField,\n  Typography,\n} from '@material-ui/core';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport { makeStyles } from '@material-ui/core/styles';\nimport MuiAlert from '@material-ui/lab/Alert';\n\nfunction Alert(props) {\n  return <MuiAlert elevation={6} variant='filled' {...props} />;\n}\n\nfunction Copyright() {\n  return (\n    <Typography variant='body2' color='textSecondary' align='center'>\n      {'Copyright © '}\n      <Link color='inherit' href='https://www.encryptographs.com'>\n        Encryptographs\n      </Link>{' '}\n      {new Date().getFullYear()}\n      {'.'}\n    </Typography>\n  );\n}\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    marginTop: theme.spacing(8),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  backdrop: {\n    zIndex: theme.zIndex.drawer + 1,\n    color: '#fff',\n  },\n  form: {\n    width: '100%', // Fix IE 11 issue.\n    marginTop: theme.spacing(1),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n}));\n\nexport default function Login() {\n  const serverUrl = process.env.REACT_APP_SERVER_URL;\n  const classes = useStyles();\n  const [user, setUser] = useContext(UserContext);\n  const [userSession, setUserSession] = useContext(UserSessionContext);\n  const [showProgress, setShowProgress] = useState(false);\n  const [showError, setShowError] = useState(false);\n  const [formInfo, setFormInfo] = useState({\n    username: '',\n    password: '',\n  });\n  const history = useHistory();\n\n  async function Submit(evt) {\n    let savedSession;\n    try {\n      // Prevent the default action of refreshing the page\n      evt.preventDefault();\n      // Show the loading dialog\n      setShowProgress(true);\n\n      const formInfoToSubmit = {\n        username: formInfo.username,\n        password: formInfo.password,\n      };\n\n      // Log in with the given information\n      const etebase = await Etebase.Account.login(\n        formInfoToSubmit.username,\n        formInfoToSubmit.password,\n        serverUrl\n      );\n\n      // Create encryption key to encrypt the session\n      const RSAkey = cryptico.generateRSAKey(formInfoToSubmit.password, 186);\n      const encryptionKey = cryptico.publicKeyString(RSAkey);\n\n      // Save the session and assign it and the user to the respective state\n      // values\n      savedSession = await etebase.save(encryptionKey);\n      setUser(etebase);\n      setUserSession(savedSession);\n    } catch (error) {\n      setShowError(true);\n    } finally {\n      // Hide the progress dialog\n      setShowProgress(false);\n      // If log in was successful clear the form and go back to the home page\n      if (savedSession) {\n        setFormInfo({\n          username: '',\n          password: '',\n        });\n        history.push('/albums');\n      }\n    }\n  }\n\n  const handleChange = (evt) => {\n    setFormInfo({ ...formInfo, [evt.target.name]: evt.target.value });\n  };\n\n  const handleClose = (evt, reason) => {\n    if (reason === 'clickaway') {\n      return;\n    }\n    setShowError(false);\n  };\n\n  return (\n    <Container component='main' maxWidth='xs'>\n      <CssBaseline />\n      <div className={classes.paper}>\n        <Avatar className={classes.avatar}>\n          <LockOutlinedIcon />\n        </Avatar>\n        <Typography component='h1' variant='h5'>\n          Sign in\n        </Typography>\n        <form className={classes.form} onSubmit={Submit}>\n          <TextField\n            variant='outlined'\n            margin='normal'\n            required\n            fullWidth\n            id='username'\n            label='Username'\n            name='username'\n            onChange={handleChange}\n            value={formInfo.username}\n            autoComplete='username'\n            autoFocus\n          />\n          <TextField\n            variant='outlined'\n            margin='normal'\n            required\n            fullWidth\n            name='password'\n            onChange={handleChange}\n            value={formInfo.password}\n            label='Password'\n            type='password'\n            id='password'\n            autoComplete='current-password'\n          />\n          <Button\n            type='submit'\n            fullWidth\n            variant='contained'\n            color='primary'\n            className={classes.submit}\n          >\n            Sign In\n          </Button>\n          <Grid container justifyContent='center'>\n            <Grid item>\n              <Link component={RouterLink} to='/signup'>\n                {\"Don't have an account? Sign Up\"}\n              </Link>\n            </Grid>\n          </Grid>\n        </form>\n      </div>\n      <Box mt={8}>\n        <Copyright />\n      </Box>\n      <Backdrop className={classes.backdrop} open={showProgress}>\n        <CircularProgress color='primary' />\n      </Backdrop>\n      <Snackbar open={showError} autoHideDuration={6000} onClose={handleClose}>\n        <Alert onClose={handleClose} severity='error'>\n          Your username or password is incorrect.\n        </Alert>\n      </Snackbar>\n    </Container>\n  );\n}\n","import React, { useEffect, useState, useContext } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { AlbumCard, AlbumDialog } from '.';\nimport { UserContext, UserSessionContext } from '../context';\nimport {\n  Avatar,\n  Backdrop,\n  Box,\n  Button,\n  CircularProgress,\n  Container,\n  CssBaseline,\n  Grid,\n  Link,\n  Snackbar,\n  Typography,\n} from '@material-ui/core';\nimport PhotoAlbumOutlinedIcon from '@material-ui/icons/PhotoAlbumOutlined';\nimport { makeStyles } from '@material-ui/core/styles';\nimport MuiAlert from '@material-ui/lab/Alert';\n\nfunction Copyright() {\n  return (\n    <Typography variant='body2' color='textSecondary' align='center'>\n      {'Copyright © '}\n      <Link color='inherit' href='https://www.encryptographs.com'>\n        Encryptographs\n      </Link>{' '}\n      {new Date().getFullYear()}\n      {'.'}\n    </Typography>\n  );\n}\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    marginTop: theme.spacing(8),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  backdrop: {\n    zIndex: theme.zIndex.drawer + 1,\n    color: '#fff',\n  },\n  form: {\n    width: '100%', // Fix IE 11 issue.\n    marginTop: theme.spacing(1),\n  },\n  gridContainer: {\n    paddingLeft: '40px',\n    paddingRight: '40px',\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n}));\n\nexport default function Albums() {\n  const classes = useStyles();\n  const history = useHistory();\n  let albumCollections = '';\n  let selectedValue = '';\n  let album = {\n    name: '',\n    description: '',\n  };\n  const [albums, setAlbums] = useState({});\n  const [open, setOpen] = useState(false);\n  const [user, setUser] = useContext(UserContext);\n  const [userSession, setUserSession] = useContext(UserSessionContext);\n\n  // If the user is not logged in, send them to the login page\n  if (!userSession) {\n    history.push('/login');\n  } else {\n  }\n\n  useEffect(() => {\n    if (userSession) {\n      getAlbums();\n    }\n  }, []);\n\n  // Get collection object and save it to state\n  async function getAlbums() {\n    const collectionManager = user.getCollectionManager();\n    try {\n      albumCollections = await collectionManager.list('encryptograph.album');\n      setAlbums(albumCollections);\n    } catch (err) {\n      console.log(err);\n    }\n  }\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  // This takes in either \"Cancel\" or \"Create\" as a value\n  async function handleClose(value, album) {\n    // This closes the dialog window\n    setOpen(false);\n    if (value === 'Create') {\n      const collectionManager = user.getCollectionManager();\n      try {\n        // Creates a collection\n        const collection = await collectionManager.create(\n          'encryptograph.album',\n          {\n            name: album.name,\n            description: album.description,\n          },\n          '' // Empty content\n        );\n        // Uploads the collection\n        await collectionManager.upload(collection);\n        console.log('Albums - Your album was created', collection);\n      } catch (err) {\n        console.log(err);\n      } finally {\n        getAlbums();\n      }\n    }\n  }\n\n  return (\n    <div>\n      {albums.data === undefined ||\n      !albums.data.length ||\n      albums.data.filter((data) => data.isDeleted === false).length === 0 ? (\n        <Container component='main' maxWidth='xs'>\n          <CssBaseline />\n          <div className={classes.paper}>\n            <Avatar className={classes.avatar}>\n              <PhotoAlbumOutlinedIcon />\n            </Avatar>\n            <Typography component='h1' variant='h5'>\n              My Albums\n            </Typography>\n            <Typography>Looks like you don't have any albums.</Typography>\n            <Button\n              fullWidth\n              variant='contained'\n              color='primary'\n              className={classes.submit}\n              onClick={handleClickOpen}\n            >\n              Create Album\n            </Button>\n            <AlbumDialog\n              open={open}\n              onClose={handleClose}\n              selectedValue={selectedValue}\n              album={album}\n              message={'Create'}\n            />\n            {/* </form> */}\n          </div>\n          <Box mt={8}>\n            <Copyright />\n          </Box>\n          {/* <Backdrop className={classes.backdrop} open={showProgress}>\n        <CircularProgress color='primary' />\n      </Backdrop>\n      <Snackbar open={showError} autoHideDuration={6000} onClose={handleClose}>\n        <Alert onClose={handleClose} severity='error'>\n          Your username or password is incorrect.\n        </Alert>\n      </Snackbar> */}\n        </Container>\n      ) : (\n        <div>\n          <Container component='main'>\n            <CssBaseline />\n            <div className={classes.paper}>\n              <Avatar className={classes.avatar}>\n                <PhotoAlbumOutlinedIcon />\n              </Avatar>\n              <Typography component='h1' variant='h5' gutterBottom>\n                My Albums\n              </Typography>\n              <Grid container className={classes.gridContainer} spacing={4}>\n                {albums.data.map((album) =>\n                  !album.isDeleted ? (\n                    <AlbumCard\n                      key={album.uid}\n                      album={album}\n                      name={album.getMeta().name}\n                      description={album.getMeta().description}\n                      uid={album.uid}\n                      getAlbums={getAlbums}\n                    />\n                  ) : null\n                )}\n              </Grid>\n              <Button\n                variant='contained'\n                color='primary'\n                className={classes.submit}\n                onClick={handleClickOpen}\n              >\n                Create Album\n              </Button>\n              <AlbumDialog\n                open={open}\n                onClose={handleClose}\n                selectedValue={selectedValue}\n                album={album}\n                message={'Create'}\n              />\n            </div>\n          </Container>\n          <Box mt={8}>\n            <Copyright />\n          </Box>\n        </div>\n      )}\n    </div>\n  );\n}\n","import React, { useContext, useEffect, useRef, useState } from 'react';\nimport { useHistory, useLocation } from 'react-router-dom';\nimport { DeleteDialog } from '.';\nimport { Base64 } from 'js-base64';\nimport ImageGallery from 'react-image-gallery';\nimport 'react-image-gallery/styles/scss/image-gallery.scss';\nimport {\n  Button,\n  Container,\n  CssBaseline,\n  Grid,\n  Typography,\n} from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { UserContext, UserSessionContext } from '../context';\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    marginTop: theme.spacing(8),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  backdrop: {\n    zIndex: theme.zIndex.drawer + 1,\n    color: '#fff',\n  },\n  form: {\n    width: '100%', // Fix IE 11 issue.\n    marginTop: theme.spacing(1),\n  },\n  gridContainer: {\n    paddingLeft: '40px',\n    paddingRight: '40px',\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n}));\n\nexport default function Gallery(props) {\n  const classes = useStyles();\n  const location = useLocation();\n  const { name } = location.state.albumMeta;\n  const album = location.state.albumCollection;\n  const [images, setImages] = useState([]);\n  const [imageUids, setImageUids] = useState([]);\n  let uidArray = [];\n  const galleryRef = useRef();\n\n  const history = useHistory();\n  const [user, setUser] = useContext(UserContext);\n  const [userSession, setUserSession] = useContext(UserSessionContext);\n\n  const [openDeleteDialog, setOpenDeleteDialog] = useState(false);\n  let selectedDeleteValue = '';\n\n  const collectionManager = user.getCollectionManager();\n  const photoManager = collectionManager.getItemManager(album);\n\n  // If the user is not logged in, send them to the login page\n  if (!userSession) {\n    history.push('/login');\n  } else {\n  }\n\n  useEffect(() => {\n    images.length ? null : getPhotos();\n  }, []);\n\n  const handleDeleteDialogClickOpen = () => {\n    setOpenDeleteDialog(true);\n  };\n\n  // Get any photos already saved in the album on Etebase\n  async function getPhotos() {\n    let initialPhotoArray = [];\n    let uidArray = [];\n    let photos = [];\n    let photoList = await photoManager.list();\n\n    // We need to remove any photos that have been marked as deleted\n    for (const photo of photoList.data) {\n      photo.isDeleted ? null : photos.push(photo);\n    }\n\n    for (const photo of photos) {\n      let photoContent = await photo.getContent();\n      let base64Photo = await cleanUp(Base64.fromUint8Array(photoContent));\n      initialPhotoArray.push(base64Photo);\n      uidArray.push(photo.uid);\n    }\n\n    updateState(initialPhotoArray, uidArray);\n\n    async function cleanUp(fullString) {\n      function findAndInsertAfter(fullString, searchString, value) {\n        const insertPosition =\n          fullString.indexOf(searchString) + searchString.length;\n        const newString =\n          fullString.slice(0, insertPosition) +\n          value +\n          fullString.slice(insertPosition);\n        return newString;\n      }\n\n      function findAndInsertBefore(fullString, searchString, value) {\n        const insertPosition = fullString.indexOf(searchString);\n        const newString =\n          fullString.slice(0, insertPosition) +\n          value +\n          fullString.slice(insertPosition);\n        return newString;\n      }\n\n      const firstPass = findAndInsertAfter(fullString, 'data', ':');\n      const secondPass = findAndInsertBefore(firstPass, 'base64', ';');\n      const thirdPass = findAndInsertAfter(secondPass, 'base64', ',');\n\n      return thirdPass;\n    }\n  }\n\n  // This gets the image in the format we need, encrypts it, uploads it, and\n  // updates state\n  async function processFile(evt) {\n    try {\n      const base64Array = await encodeImagesToBase64(evt);\n      const itemArray = await uploadImages(base64Array);\n      updateState(base64Array, uidArray);\n    } catch (err) {\n      console.log(err);\n    }\n  }\n\n  // This function encodes the images both in base64 to use for the image\n  // gallery\n  async function encodeImagesToBase64(evt) {\n    // Returns base64 strings of all images\n    function getBase64(file) {\n      const reader = new FileReader();\n      return new Promise((resolve) => {\n        reader.onload = (ev) => {\n          resolve(ev.target.result);\n        };\n        reader.readAsDataURL(file);\n      });\n    }\n    // The array of promises we will return\n    const promises = [];\n    const fileList = Array.from(evt.target.files);\n    // We set the input value to an empty string in case the user wants to\n    // select the same files, otherwise the onChange won't fire\n    evt.target.value = '';\n\n    // Loops through all images and adds them to the promises array\n    for (let i = 0; i < fileList.length; i++) {\n      promises.push(getBase64(fileList[i]));\n    }\n\n    // Returns the array of base64 strings\n    return await Promise.all(promises);\n  }\n\n  async function uploadImages(secondStep) {\n    const itemArray = await secondStep.reduce(\n      async (previousPromise, dataString) => {\n        let imagesArray = await previousPromise;\n        // We use the Base64 library to convert the images to Uint8Arrays which\n        // are required to use in Etebase\n        const ImageInt8Array = Base64.toUint8Array(dataString);\n\n        const photo = await photoManager.create(\n          {\n            type: 'file',\n            name: 'image.png',\n            mtime: new Date().getTime(),\n          },\n          ImageInt8Array\n        );\n\n        imagesArray.push(photo);\n        uidArray.push(photo.uid);\n\n        return imagesArray;\n      },\n      Promise.resolve([])\n    );\n\n    // Upload the images\n    await photoManager.batch(itemArray);\n    return itemArray;\n  }\n\n  function updateState(base64Array, uidArray) {\n    // On the initial render, we can set the Images state to the array.\n    // Otherwise, we will append the images to state\n    if (images.length === 0) {\n      let galleryArray = [];\n      // Convert the array to the format required by the Gallery\n      for (const image of base64Array) {\n        galleryArray.push({\n          original: image,\n          thumbnail: image,\n        });\n      }\n      setImages(galleryArray);\n    } else {\n      // We add to the image array using a wrapper function\n      for (const image of base64Array) {\n        setImages((images) => [\n          ...images,\n          { original: image, thumbnail: image },\n        ]);\n      }\n    }\n\n    // We need to maintain a list of the uids for each image since this\n    // information cannot be stored within any of the props of the images\n\n    for (const uid of uidArray) {\n      setImageUids((imageUids) => [...imageUids, uid]);\n    }\n\n    // The below code was an attempt to concat of array of objects to state\n    // however while it works it does not trigger a re-render. Will save this\n    // code and research if this is better than the above approach and if so,\n    // how to get it to work\n\n    // const galleryArray = base64Array.reduce(function (\n    //   imageAccumulator,\n    //   currentImage\n    // ) {\n    //   imageAccumulator.push({\n    //     original: currentImage,\n    //     thumbnail: currentImage,\n    //   });\n    //   return imageAccumulator;\n    // },\n    // []);\n\n    // setImages((images) => [images.concat(galleryArray)]);\n  }\n\n  async function handleDeleteDialogClose(value) {\n    const galleryElement = galleryRef.current;\n    const indexOfPhoto = galleryElement.getCurrentIndex();\n    const photoUid = imageUids[indexOfPhoto];\n\n    // This closes the delete dialog\n    setOpenDeleteDialog(false);\n    if (value === 'Agree') {\n      try {\n        const photo = await photoManager.fetch(photoUid);\n        photo.delete();\n        await photoManager.batch([photo]);\n      } catch (err) {\n        console.log(err);\n      } finally {\n        setImageUids((previous) =>\n          previous.filter((uid, index) => index !== indexOfPhoto)\n        );\n        setImages((previous) =>\n          previous.filter((uid, index) => index !== indexOfPhoto)\n        );\n      }\n    }\n  }\n\n  return (\n    <Container component='main'>\n      <CssBaseline />\n      <div className={classes.paper}>\n        <Grid container justifyContent='center'>\n          <Grid item container display='flex' justifyContent='center'>\n            <Typography variant='h4'>{name}</Typography>\n          </Grid>\n          <Grid container item justifyContent='center'>\n            {images.length === 0 ? (\n              <ImageGallery\n                items={images}\n                showFullscreenButton={false}\n                showPlayButton={false}\n                ref={galleryRef}\n              />\n            ) : (\n              <ImageGallery items={images} ref={galleryRef} />\n            )}\n          </Grid>\n          {album.accessLevel !== 0 ? (\n            <Grid container item justifyContent='center'>\n              <label htmlFor='upload-images'>\n                <input\n                  style={{ display: 'none' }}\n                  id='upload-images'\n                  name='upload-images'\n                  type='file'\n                  onChange={processFile}\n                  multiple\n                />\n                <Button variant='contained' color='primary' component='span'>\n                  Add Images\n                </Button>\n              </label>\n              <label htmlFor='delete-image'>\n                <Button\n                  variant='contained'\n                  color='primary'\n                  component='span'\n                  onClick={handleDeleteDialogClickOpen}\n                >\n                  Delete Image\n                </Button>\n                <DeleteDialog\n                  open={openDeleteDialog}\n                  onClose={handleDeleteDialogClose}\n                  selectedValue={selectedDeleteValue}\n                  message={'image'}\n                />\n              </label>\n            </Grid>\n          ) : null}\n        </Grid>\n      </div>\n    </Container>\n  );\n}\n","import React, { useContext, useEffect } from 'react';\nimport { useHistory } from 'react-router';\nimport { Link as RouterLink } from 'react-router-dom';\nimport Link from '@material-ui/core/Link';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { InviteContext, UserContext, UserSessionContext } from '../context';\nimport { DrawerMenu } from '.';\nimport {\n  AppBar,\n  Badge,\n  Button,\n  IconButton,\n  Menu,\n  MenuItem,\n  Toolbar,\n  Typography,\n} from '@material-ui/core/';\nimport AccountCircle from '@material-ui/icons/AccountCircle';\nimport MailIcon from '@material-ui/icons/Mail';\nimport MoreIcon from '@material-ui/icons/MoreVert';\n\nconst useStyles = makeStyles((theme) => ({\n  grow: {\n    flexGrow: 1,\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  sectionDesktop: {\n    display: 'none',\n    [theme.breakpoints.up('md')]: {\n      display: 'flex',\n    },\n  },\n  sectionMobile: {\n    display: 'flex',\n    [theme.breakpoints.up('md')]: {\n      display: 'none',\n    },\n  },\n  title: {\n    display: 'none',\n    [theme.breakpoints.up('sm')]: {\n      display: 'block',\n    },\n  },\n}));\n\nexport default function Navbar() {\n  // Styling and forms\n  const classes = useStyles();\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const [mobileMoreAnchorEl, setMobileMoreAnchorEl] = React.useState(null);\n\n  const isMenuOpen = Boolean(anchorEl);\n  const isMobileMenuOpen = Boolean(mobileMoreAnchorEl);\n\n  const history = useHistory();\n\n  // Pull in our state from Context\n  const [user, setUser] = useContext(UserContext);\n  const [userSession, setUserSession] = useContext(UserSessionContext);\n  const [invites, setInvites] = useContext(InviteContext);\n\n  // const [numberOfInvites, setNumberOfInvites] = useState(0);\n\n  const handleProfileMenuOpen = (event) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleMobileMenuClose = () => {\n    setMobileMoreAnchorEl(null);\n  };\n\n  const handleMenuClose = () => {\n    setAnchorEl(null);\n    handleMobileMenuClose();\n  };\n\n  const handleMobileMenuOpen = (event) => {\n    setMobileMoreAnchorEl(event.currentTarget);\n  };\n\n  const menuId = 'primary-search-account-menu';\n  const renderMenu = (\n    <Menu\n      anchorEl={anchorEl}\n      anchorOrigin={{ vertical: 'bottom', horizontal: 'right' }}\n      id={menuId}\n      keepMounted\n      transformOrigin={{ vertical: 'top', horizontal: 'right' }}\n      getContentAnchorEl={null}\n      open={isMenuOpen}\n      onClose={handleMenuClose}\n    >\n      <MenuItem onClick={ChangePassword}>Change Password</MenuItem>\n      <MenuItem onClick={PublicKey}>View Public Key</MenuItem>\n      <MenuItem onClick={Logout}>Logout</MenuItem>\n    </Menu>\n  );\n\n  const mobileMenuId = 'primary-search-account-menu-mobile';\n  const renderMobileMenu = (\n    <Menu\n      anchorEl={mobileMoreAnchorEl}\n      anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\n      id={mobileMenuId}\n      keepMounted\n      transformOrigin={{ vertical: 'top', horizontal: 'right' }}\n      open={isMobileMenuOpen}\n      onClose={handleMobileMenuClose}\n    >\n      <MenuItem>\n        <IconButton aria-label='show new invites' color='inherit'>\n          <Badge badgeContent={4} color='secondary'>\n            <MailIcon />\n          </Badge>\n        </IconButton>\n      </MenuItem>\n      <MenuItem onClick={handleProfileMenuOpen}>\n        <IconButton\n          aria-label='account of current user'\n          aria-controls='primary-search-account-menu'\n          aria-haspopup='true'\n          color='inherit'\n        >\n          <AccountCircle />\n        </IconButton>\n        <p>Profile</p>\n      </MenuItem>\n    </Menu>\n  );\n\n  useEffect(() => {\n    user !== '' ? getInvites() : null;\n  }, [user]);\n\n  async function Logout() {\n    handleMenuClose();\n    await user.logout();\n    setUserSession('');\n    setUser('');\n    history.push('/');\n  }\n\n  function ChangePassword() {\n    handleMenuClose();\n    history.push('/changepassword');\n  }\n\n  function PublicKey() {\n    handleMenuClose();\n    history.push('/publickey');\n  }\n\n  async function getInvites() {\n    const invitationManager = user.getInvitationManager();\n    const invitations = await invitationManager.listIncoming();\n    setInvites(invitations);\n  }\n\n  return (\n    <div className={classes.grow}>\n      <AppBar position='static' style={{ position: 'fixed', top: 0, left: 0 }}>\n        <Toolbar>\n          <DrawerMenu />\n          <Typography variant='h6' className={classes.title} noWrap>\n            <Link color='inherit' component={RouterLink} to={'/'}>\n              Encryptographs\n            </Link>\n          </Typography>\n          <div className={classes.grow} />\n          {!userSession ? (\n            <div>\n              <Button color='inherit' component={RouterLink} to={'/signup'}>\n                Signup\n              </Button>\n              <Button color='inherit' component={RouterLink} to={'/login'}>\n                Login\n              </Button>\n            </div>\n          ) : (\n            <div>\n              <div className={classes.sectionDesktop}>\n                <IconButton\n                  aria-label='show new invites'\n                  color='inherit'\n                  component={RouterLink}\n                  to={'/invites'}\n                >\n                  <Badge\n                    badgeContent={!invites.data ? 0 : invites.data.length}\n                    color='secondary'\n                  >\n                    <MailIcon />\n                  </Badge>\n                </IconButton>\n                <IconButton\n                  edge='end'\n                  aria-label='account of current user'\n                  aria-controls={menuId}\n                  aria-haspopup='true'\n                  onClick={handleProfileMenuOpen}\n                  color='inherit'\n                >\n                  <AccountCircle />\n                </IconButton>\n              </div>\n              <div className={classes.sectionMobile}>\n                <IconButton\n                  aria-label='show more'\n                  aria-controls={mobileMenuId}\n                  aria-haspopup='true'\n                  onClick={handleMobileMenuOpen}\n                  color='inherit'\n                >\n                  <MoreIcon />\n                </IconButton>\n              </div>\n            </div>\n          )}\n        </Toolbar>\n      </AppBar>\n      {renderMobileMenu}\n      {renderMenu}\n    </div>\n  );\n}\n","import React, { useState } from 'react';\nimport * as Etebase from 'etebase';\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport Link from '@material-ui/core/Link';\nimport Box from '@material-ui/core/Box';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\n\nfunction Copyright() {\n  return (\n    <Typography variant='body2' color='textSecondary' align='center'>\n      {'Copyright © '}\n      <Link color='inherit' href='https://material-ui.com/'>\n        Encryptographs\n      </Link>{' '}\n      {new Date().getFullYear()}\n      {'.'}\n    </Typography>\n  );\n}\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    marginTop: theme.spacing(8),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  form: {\n    width: '100%', // Fix IE 11 issue.\n    marginTop: theme.spacing(1),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n}));\n\nexport default function Signup() {\n  const serverUrl = process.env.REACT_APP_SERVER_URL;\n  const classes = useStyles();\n  const [data, setData] = useState({\n    username: '',\n    email: '',\n    password: '',\n    confirmPassword: '',\n  });\n  async function Submit(evt) {\n    // Prevent the default action of refreshing the page\n    evt.preventDefault();\n    const formData = {\n      username: data.username,\n      email: data.email,\n      password: data.password,\n      confirmPassword: data.confirmPassword,\n    };\n    if (formData.confirmPassword !== formData.password) {\n      alert('Your passwords do not match');\n    }\n    // Creates the account\n    const eteBaseUser = await Etebase.Account.signup(\n      {\n        username: formData.username,\n        email: formData.email,\n      },\n      formData.password,\n      serverUrl\n    );\n\n    // Logs in the user\n    const etebase = await Etebase.Account.login(\n      formData.username,\n      formData.password,\n      serverUrl\n    );\n\n    // Clear the inputs after the button is pressed\n    setData({\n      username: '',\n      email: '',\n      password: '',\n      confirmPassword: '',\n    });\n  }\n  const handleChange = (evt) => {\n    evt.persist();\n    setData({ ...data, [evt.target.name]: evt.target.value });\n  };\n  return (\n    <Container component='main' maxWidth='xs'>\n      <CssBaseline />\n      <div className={classes.paper}>\n        <Avatar className={classes.avatar}>\n          <LockOutlinedIcon />\n        </Avatar>\n        <Typography component='h1' variant='h5'>\n          Sign Up\n        </Typography>\n        {/* We need to add the onSubmit event listener here */}\n        <form className={classes.form} noValidate onSubmit={Submit}>\n          <TextField\n            variant='outlined'\n            margin='normal'\n            required\n            fullWidth\n            name='email'\n            onChange={handleChange}\n            label='Email'\n            type='email'\n            value={data.email}\n            id='email'\n            autoFocus\n          />\n          <TextField\n            variant='outlined'\n            margin='normal'\n            required\n            fullWidth\n            id='username'\n            label='Username'\n            name='username'\n            onChange={handleChange}\n            value={data.username}\n            autoComplete='username'\n          />\n          <TextField\n            variant='outlined'\n            margin='normal'\n            required\n            fullWidth\n            name='password'\n            onChange={handleChange}\n            label='Password'\n            type='password'\n            value={data.password}\n            id='password'\n            autoComplete='current-password'\n          />\n          <TextField\n            variant='outlined'\n            margin='normal'\n            required\n            fullWidth\n            name='confirmPassword'\n            onChange={handleChange}\n            label='Confirm Password'\n            type='password'\n            value={data.confirmPassword}\n            id='confirmPassword'\n            autoComplete='current-password'\n          />\n          <Button\n            type='submit'\n            fullWidth\n            variant='contained'\n            color='primary'\n            className={classes.submit}\n          >\n            Sign Up\n          </Button>\n        </form>\n      </div>\n      <Box mt={8}>\n        <Copyright />\n      </Box>\n    </Container>\n  );\n}\n","import React, { useContext } from 'react';\nimport * as Etebase from 'etebase';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { UserContext } from '../context';\nimport { Grid, Typography } from '@material-ui/core';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  title: {\n    marginTop: theme.spacing(8),\n  },\n  centerColumn: {\n    height: 750,\n    marginTop: theme.spacing(-30),\n  },\n}));\n\nexport default function PublicKey() {\n  const [user, setUser] = useContext(UserContext);\n  const classes = useStyles();\n\n  const invitationManager = user.getInvitationManager();\n  const myPublicKey = invitationManager.pubkey;\n  const delimiter = ' ';\n  const prettyFingerprint = Etebase.getPrettyFingerprint(\n    myPublicKey,\n    delimiter\n  );\n\n  const lineOne = prettyFingerprint.substr(0, 23);\n  const lineTwo = prettyFingerprint.substr(24, 23);\n  const lineThree = prettyFingerprint.substr(48);\n\n  return (\n    <Grid container direction='column' align='center'>\n      <Typography component='h1' variant='h4' className={classes.title}>\n        Your Public Key\n      </Typography>\n      <Grid\n        container\n        direction='column'\n        justifyContent='center'\n        alignItems='center'\n        className={classes.centerColumn}\n      >\n        <Typography variant='h5'>{lineOne}</Typography>\n        <Typography variant='h5'>{lineTwo}</Typography>\n        <Typography variant='h5'>{lineThree}</Typography>\n      </Grid>\n    </Grid>\n  );\n}\n","import React, { useState } from 'react';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport {\n  Button,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogContentText,\n  FormControl,\n  FormControlLabel,\n  Radio,\n  RadioGroup,\n  TextField,\n  useMediaQuery,\n} from '@material-ui/core';\nimport SendIcon from '@material-ui/icons/Send';\n\n// Styling for the send button\nconst useStyles = makeStyles((theme) => ({\n  button: {\n    margin: theme.spacing(1),\n  },\n}));\n\nexport default function ShareInviteDialog(props) {\n  const classes = useStyles();\n  const theme = useTheme();\n  const fullScreen = useMediaQuery(theme.breakpoints.down('sm'));\n  const { onClose, selectedValue, open } = props;\n  const [inviteeSelections, setInviteeSelections] = useState({\n    user: '',\n    userAccess: 'ReadOnly',\n  });\n\n  const handleTextChange = (evt) => {\n    setInviteeSelections({\n      ...inviteeSelections,\n      [evt.target.name]: evt.target.value,\n    });\n  };\n\n  const handleRadioChange = (evt) => {\n    setInviteeSelections({\n      ...inviteeSelections,\n      userAccess: evt.target.value,\n    });\n  };\n\n  const handleSubmit = (evt) => {\n    evt.preventDefault();\n    setInviteeSelections({\n      user: '',\n      userAccess: 'ReadOnly',\n    });\n    onClose('Send', inviteeSelections);\n  };\n\n  const handleCancel = (evt) => {\n    setInviteeSelections({\n      user: '',\n      userAccess: 'ReadOnly',\n    });\n    onClose('Cancel', inviteeSelections);\n  };\n\n  return (\n    <Dialog\n      open={open}\n      // When you click away from the dialog this fires. If this was not here\n      // you would need to select an option to close the window\n      onClose={handleCancel}\n      aria-labelledby='alert-dialog-title'\n      aria-describedby='alert-dialog-description'\n      fullScreen={fullScreen}\n    >\n      <form noValidate autoComplete='off' onSubmit={handleSubmit}>\n        <DialogContent>\n          <DialogContentText id='alert-dialog-description'>\n            Please enter the name of the user you would like to share this album\n            with and select the level of access you would like them to have.\n          </DialogContentText>\n          <TextField\n            autoFocus\n            id='user'\n            label='User'\n            name='user'\n            required\n            variant='outlined'\n            value={inviteeSelections.user}\n            onChange={handleTextChange}\n            fullWidth\n          />\n\n          <FormControl component='fieldset'>\n            <RadioGroup\n              row\n              aria-label='position'\n              name='position'\n              onChange={handleRadioChange}\n              value={inviteeSelections.userAccess}\n            >\n              <FormControlLabel\n                control={<Radio color='primary' />}\n                label='Admin'\n                labelPlacement='bottom'\n                name='Admin'\n                value='Admin'\n              />\n              <FormControlLabel\n                value='ReadWrite'\n                control={<Radio color='primary' />}\n                label='View and Add/Delete'\n                labelPlacement='bottom'\n                name='ReadWrite'\n                value='ReadWrite'\n              />\n              <FormControlLabel\n                value='ReadOnly'\n                control={<Radio color='primary' />}\n                label='View Only'\n                labelPlacement='bottom'\n                name='ReadOnly'\n                value='ReadOnly'\n              />\n            </RadioGroup>\n          </FormControl>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleCancel} color='primary' value='Cancel'>\n            Cancel\n          </Button>\n          <div style={{ flex: '1 0 0' }} />\n          <Button\n            type='submit'\n            variant='contained'\n            color='primary'\n            className={classes.button}\n            endIcon={<SendIcon>send</SendIcon>}\n            value='Send'\n          >\n            Send\n          </Button>\n        </DialogActions>\n      </form>\n    </Dialog>\n  );\n}\n","import React, { useContext, useState } from 'react';\nimport * as Etebase from 'etebase';\nimport { useHistory } from 'react-router';\nimport { InviteContext, UserContext, UserSessionContext } from '../context';\nimport { PublicKeyDialog } from '.';\nimport { makeStyles } from '@material-ui/core/styles';\nimport {\n  Button,\n  Grid,\n  IconButton,\n  List,\n  ListItem,\n  ListItemSecondaryAction,\n  ListItemText,\n  Typography,\n} from '@material-ui/core';\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle';\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    marginTop: theme.spacing(8),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  root: {\n    flexGrow: 1,\n  },\n  button: {\n    marginRight: '10px',\n    marginTop: '10px',\n  },\n  listItem: {\n    paddingRight: '200px',\n  },\n  centerColumn: {\n    height: 750,\n  },\n}));\n\nexport default function InteractiveList() {\n  const classes = useStyles();\n  const [invites, setInvites] = useContext(InviteContext);\n  const [user, setUser] = useContext(UserContext);\n  const [userSession, setUserSession] = useContext(UserSessionContext);\n  const [openPublicKeyDialog, setOpenPublicKeyDialog] = useState(false);\n  const history = useHistory();\n\n  // If the user is not logged in, send them to the login page\n  if (!userSession) {\n    history.push('/login');\n  } else {\n  }\n\n  const handlePublicKeyDialogClickOpen = () => {\n    setOpenPublicKeyDialog(true);\n  };\n\n  async function getInvites() {\n    const invitationManager = user.getInvitationManager();\n    const invitations = await invitationManager.listIncoming();\n    setInvites(invitations);\n  }\n\n  async function handleAccept(invite) {\n    try {\n      const invitationManager = user.getInvitationManager();\n      await invitationManager.accept(invite);\n      getInvites();\n    } catch (err) {\n      console.log(err);\n    }\n  }\n\n  async function handleDeny(invite) {\n    try {\n      const invitationManager = user.getInvitationManager();\n      await invitationManager.reject(invite);\n      getInvites();\n    } catch (err) {\n      console.log(err);\n    }\n  }\n\n  function getPublicKey(invite) {\n    const publicKey = invite.fromPubkey;\n    const delimiter = ' ';\n    const prettyFingerprint = Etebase.getPrettyFingerprint(\n      publicKey,\n      delimiter\n    );\n\n    const lineOne = prettyFingerprint.substr(0, 23);\n    const lineTwo = prettyFingerprint.substr(24, 23);\n    const lineThree = prettyFingerprint.substr(48);\n\n    return { lineOne, lineTwo, lineThree };\n  }\n\n  return (\n    <div className={classes.paper}>\n      <Grid\n        container\n        direction='column'\n        justifyContent='center'\n        alignItems='center'\n      >\n        {invites.data.length !== 0 ? (\n          invites.data.map((invite) => (\n            <Grid item xs={12} md={12} key={invite.uid}>\n              <div>\n                <List>\n                  <ListItem divider className={classes.listItem}>\n                    <IconButton onClick={handlePublicKeyDialogClickOpen}>\n                      <AccountCircleIcon />\n                    </IconButton>\n                    <PublicKeyDialog\n                      open={openPublicKeyDialog}\n                      onClose={setOpenPublicKeyDialog}\n                      username={invite.fromUsername}\n                      getPublicKey={getPublicKey(invite)}\n                    />\n                    <ListItemText\n                      primary={invite.fromUsername}\n                      secondary={`${invite.fromUsername} wants to share an album with you.`}\n                    />\n                    <ListItemSecondaryAction>\n                      <Button\n                        className={classes.button}\n                        variant='outlined'\n                        color='secondary'\n                        aria-label='deny'\n                        size='small'\n                        onClick={() => {\n                          handleDeny(invite);\n                        }}\n                      >\n                        Deny\n                      </Button>\n                      <Button\n                        className={classes.button}\n                        edge='end'\n                        variant='contained'\n                        aria-label='accept'\n                        color='primary'\n                        size='small'\n                        onClick={() => {\n                          handleAccept(invite);\n                        }}\n                      >\n                        Accept\n                      </Button>\n                    </ListItemSecondaryAction>\n                  </ListItem>\n                </List>\n              </div>\n            </Grid>\n          ))\n        ) : (\n          <Typography variant='h5'>You do not have any invites</Typography>\n        )}\n      </Grid>\n    </div>\n  );\n}\n","import React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport { Dialog, IconButton, Typography } from '@material-ui/core';\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\nimport MuiDialogContent from '@material-ui/core/DialogContent';\n// import IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\n// import Typography from '@material-ui/core/Typography';\n\nconst styles = (theme) => ({\n  root: {\n    margin: 0,\n    padding: theme.spacing(2),\n  },\n  closeButton: {\n    position: 'absolute',\n    right: theme.spacing(0),\n    top: theme.spacing(1),\n    color: theme.palette.grey[500],\n  },\n});\n\nconst DialogTitle = withStyles(styles)((props) => {\n  const { children, classes, onClose, ...other } = props;\n  return (\n    <MuiDialogTitle disableTypography className={classes.root} {...other}>\n      <Typography variant='h6'>{children}</Typography>\n      {onClose ? (\n        <IconButton\n          aria-label='close'\n          className={classes.closeButton}\n          onClick={onClose}\n        >\n          <CloseIcon />\n        </IconButton>\n      ) : null}\n    </MuiDialogTitle>\n  );\n});\n\nconst DialogContent = withStyles((theme) => ({\n  root: {\n    padding: theme.spacing(3),\n  },\n}))(MuiDialogContent);\n\nexport default function PublickKeyDialog(props) {\n  const { open, onClose, username, getPublicKey } = props;\n  const handleClose = () => {\n    onClose(false);\n  };\n\n  return (\n    <Dialog\n      onClose={handleClose}\n      aria-labelledby='customized-dialog-title'\n      open={open}\n    >\n      <DialogTitle id='customized-dialog-title' onClose={handleClose}>\n        {`${username}'s Public Key`}\n      </DialogTitle>\n      <DialogContent dividers>\n        <Typography gutterBottom>{getPublicKey.lineOne}</Typography>\n        <Typography gutterBottom>{getPublicKey.lineTwo}</Typography>\n        <Typography gutterBottom>{getPublicKey.lineThree}</Typography>\n      </DialogContent>\n    </Dialog>\n  );\n}\n","import React, { Component } from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport {\n  Albums,\n  ChangePassword,\n  Gallery,\n  Home,\n  Login,\n  PublicKey,\n  Signup,\n  Invites,\n} from './components';\n\nclass Routes extends Component {\n  render() {\n    return (\n      <Switch>\n        <Route exact path='/' component={Home} />\n        <Route path='/changepassword' component={ChangePassword} />\n        <Route path='/home' component={Home} />\n        <Route path='/login' component={Login} />\n        <Route path='/albums' component={Albums} />\n        <Route path='/gallery' component={Gallery} />\n        <Route path='/signup' component={Signup} />\n        <Route path='/publickey' component={PublicKey} />\n        <Route path='/invites' component={Invites} />\n      </Switch>\n    );\n  }\n}\n\nexport default Routes;\n","import React, { useContext } from 'react';\nimport { ConfirmPassword, Navbar } from './components';\nimport { UserContext, UserSessionContext } from './context';\nimport Routes from './routes';\n\nexport default function App() {\n  const [user, setUser] = useContext(UserContext);\n  const [userSession, setUserSession] = useContext(UserSessionContext);\n  if (userSession && !user) {\n    return (\n      <div>\n        <ConfirmPassword />\n      </div>\n    );\n  }\n  return (\n    <div>\n      <Navbar />\n      <Routes />\n    </div>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './app';\nimport Context from './context';\nimport { BrowserRouter as Router } from 'react-router-dom';\n\nReactDOM.render(\n  <Context>\n    <Router>\n      <App />\n    </Router>\n  </Context>,\n\n  document.getElementById('app') // make sure this is the same as the id of the div in the index.html\n);\n"],"sourceRoot":""}